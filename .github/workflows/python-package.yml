# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python build and test

on: [push, pull_request]

jobs:
  build:

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov pylint mypy pytest-mypy
        python -m pip install -r requirements.txt
    - name: Lint with pylint
      run: |
        pylint --fail-under 6.5 UI.py logReader.py main.pyw tests > pylint.txt
    - name: Upload pylint results
      uses: actions/upload-artifact@v2
      with:
        name: pylint-results-${{ matrix.python-version }}
        path: pylint.txt
      # Use always() to always run this step to publish test results when there are failures
      if: ${{ always() }}
    - name: Test with pytest and mypy
      run: |
        pytest --mypy --junitxml=junit/test-results-${{ matrix.python-version }}.xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: pyinstaller to EXE
      run: |
        pip install pyinstaller
        pyinstaller main.spec
    - uses: actions/upload-artifact@v2
      with:
        name: routeTracker.exe
        path: dist